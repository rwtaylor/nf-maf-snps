700000*7000
24*200
48*38
48*32
150000*1000
1500000*1000
389.47*8
467.36*8
470.03  + 389.47*8
564.04  + 467.36*8
470.03 + 188.55  + 389.47*8
564.04 + 226.26  + 467.36*8
4529-3774
library(poRe)
install.packages("poRe")
source("https://bioconductor.org/biocLite.R")#
         biocLite("BiocUpgrade")
80/12/3
80*12*3
2.6*10e6
2.6*10e5
2.6*10e5/2600
200*35
60*600
60*200
0.001
log10(0.001)
1/(10^25)
287/339
2500 + 5700
2500 + 5700  + 1500
24*16
24*32
4000/7
2000/7
15*24
6372*0.06
194.35*0.03
595.75*0.03
16317.99*0.01
382+5.83+17.87+163.17
6000*0.06
200+150+175
200+150+175+150
568-100
360+5.83+17.87+163.17
446/23480
546/23480
(546/75)/23480
(546-75)/23480
4*2000
6.44*2000
4.75*2000
10.94*2000
116-32
50*18
50+18
57.16
57/16
3000*500
50000*5
20000/200
23*50
install.packages("tidyverse")
devtools::install_github("tidyverse/readr")
install.packages("tidyverse")
?system.file
?read_fwf
library(readr)
?read_fwf
foo <- ("AVAIL", "ACTIVE_FEATURES", "CPUS", "TMP_DISK", "FREE_MEM", "AVAIL_FEATURES", "GROUPS", "OVERSUBSCRIBE", "TIMELIMIT", "MEMORY", "HOSTNAMES", "NODE_ADDR", "PRIO_TIER", "ROOT", "JOB_SIZE", "STATE", "USER", "VERSION", "WEIGHT", "S:C:T", "NODES(A/I) ", "MAX_CPUS_PER_NODE ", "CPUS(A/I/O/T) ", "NODES ", "REASON ", "NODES(A/I/O/T) ", "GRES ", "TIMESTAMP ", "PRIO_JOB_FACTOR ", "DEFAULTTIME ", "PREEMPT_MODE ", "NODELIST ", "CPU_LOAD ", "PARTITION ", "PARTITION ", "ALLOCNODES ", "STATE ", "USER ", "SOCKETS ", "CORES ", "THREADS")
foo <- c("AVAIL", "ACTIVE_FEATURES", "CPUS", "TMP_DISK", "FREE_MEM", "AVAIL_FEATURES", "GROUPS", "OVERSUBSCRIBE", "TIMELIMIT", "MEMORY", "HOSTNAMES", "NODE_ADDR", "PRIO_TIER", "ROOT", "JOB_SIZE", "STATE", "USER", "VERSION", "WEIGHT", "S:C:T", "NODES(A/I) ", "MAX_CPUS_PER_NODE ", "CPUS(A/I/O/T) ", "NODES ", "REASON ", "NODES(A/I/O/T) ", "GRES ", "TIMESTAMP ", "PRIO_JOB_FACTOR ", "DEFAULTTIME ", "PREEMPT_MODE ", "NODELIST ", "CPU_LOAD ", "PARTITION ", "PARTITION ", "ALLOCNODES ", "STATE ", "USER ", "SOCKETS ", "CORES ", "THREADS")
foo
length(foo)
foo <- c("AVAIL", "ACTIVE_FEATURES", "CPUS", "TMP_DISK", "FREE_MEM", "AVAIL_FEATURES", "GROUPS", "OVERSUBSCRIBE", "TIMELIMIT", "MEMORY", "HOSTNAMES", "NODE_ADDR", "PRIO_TIER", "ROOT", "JOB_SIZE", "STATE", "USER", "VERSION", "WEIGHT", "S:C:T", "NODES(A/I) ", "MAX_CPUS_PER_NODE ", "CPUS(A/I/O/T) ", "NODES ", "REASON ", "NODES(A/I/O/T) ", "GRES ", "TIMESTAMP ", "PRIO_JOB_FACTOR ", "DEFAULTTIME ", "PREEMPT_MODE ", "NODELIST ", "CPU_LOAD ", "PARTITION ", "PARTITION ", "ALLOCNODES ", "STATE ", "USER ", "SOCKETS ", "CORES ", "THREADS")#
bar <- c("up", "CPU_IVY,E5-2650v2,2.60GHz,NOACCL,NOACCL", "16", "0", "N/A", "CPU_IVY,E5-2650v2,2.60GHz,NOACCL,NOACCL", "all", "NO", "infinite", "64000", "sh-5-7", "sh-5-7", "1", "no", "1-infinite", "drain*", "root", "N/A", "100081", "2:8:1", "0/0 ", "UNLIMITED ", "0/0/16/16 ", "1 ", "DIMM B2 ", " SR942432801 ", "0/0/1/1 ", "(null) ", "2017-01-18T12:38:51 ", "10 ", "2:00:00 ", "REQUEUE ", "sh-5-7 ", "N/A ", "normal* ", "normal ", "all ", "drained* ", "root(0) ", "2 ", "8 ", "1 ")
foo
bar
foo[42] <- "NA"
cbind(foo,bar)
foo <- c("AVAIL", "ACTIVE_FEATURES", "CPUS", "TMP_DISK", "FREE_MEM", "AVAIL_FEATURES", "GROUPS", "OVERSUBSCRIBE", "TIMELIMIT", "MEMORY", "HOSTNAMES", "NODE_ADDR", "PRIO_TIER", "ROOT", "JOB_SIZE", "STATE", "USER", "VERSION", "WEIGHT", "S:C:T", "NODES(A/I) ", "MAX_CPUS_PER_NODE ", "CPUS(A/I/O/T) ", "NODES ", "REASON ", "NODES(A/I/O/T) ", "GRES ", "TIMESTAMP ", "PRIO_JOB_FACTOR ", "DEFAULTTIME ", "PREEMPT_MODE ", "NODELIST ", "CPU_LOAD ", "PARTITION ", "PARTITION ", "ALLOCNODES ", "STATE ", "USER ", "SOCKETS ", "CORES ", "THREADS")#
bar <- c("up", "CPU_IVY,E5-2650v2,2.60GHz,NOACCL,NOACCL", "16", "0", "N/A", "CPU_IVY,E5-2650v2,2.60GHz,NOACCL,NOACCL", "all", "NO", "infinite", "64000", "sh-5-7", "sh-5-7", "1", "no", "1-infinite", "drain*", "root", "N/A", "100081", "2:8:1", "0/0 ", "UNLIMITED ", "0/0/16/16 ", "1 ", "DIMM B2 ", " SR942432801 ", "0/0/1/1 ", "(null) ", "2017-01-18T12:38:51 ", "10 ", "2:00:00 ", "REQUEUE ", "sh-5-7 ", "N/A ", "normal* ", "normal ", "all ", "drained* ", "root(0) ", "2 ", "8 ", "1 ")#
#
bar[25] <- NA#
#
cbind(foo,bar)
?append
foo <- c("AVAIL", "ACTIVE_FEATURES", "CPUS", "TMP_DISK", "FREE_MEM", "AVAIL_FEATURES", "GROUPS", "OVERSUBSCRIBE", "TIMELIMIT", "MEMORY", "HOSTNAMES", "NODE_ADDR", "PRIO_TIER", "ROOT", "JOB_SIZE", "STATE", "USER", "VERSION", "WEIGHT", "S:C:T", "NODES(A/I) ", "MAX_CPUS_PER_NODE ", "CPUS(A/I/O/T) ", "NODES ", "REASON ", "NODES(A/I/O/T) ", "GRES ", "TIMESTAMP ", "PRIO_JOB_FACTOR ", "DEFAULTTIME ", "PREEMPT_MODE ", "NODELIST ", "CPU_LOAD ", "PARTITION ", "PARTITION ", "ALLOCNODES ", "STATE ", "USER ", "SOCKETS ", "CORES ", "THREADS")#
bar <- c("up", "CPU_IVY,E5-2650v2,2.60GHz,NOACCL,NOACCL", "16", "0", "N/A", "CPU_IVY,E5-2650v2,2.60GHz,NOACCL,NOACCL", "all", "NO", "infinite", "64000", "sh-5-7", "sh-5-7", "1", "no", "1-infinite", "drain*", "root", "N/A", "100081", "2:8:1", "0/0 ", "UNLIMITED ", "0/0/16/16 ", "1 ", "DIMM B2 ", " SR942432801 ", "0/0/1/1 ", "(null) ", "2017-01-18T12:38:51 ", "10 ", "2:00:00 ", "REQUEUE ", "sh-5-7 ", "N/A ", "normal* ", "normal ", "all ", "drained* ", "root(0) ", "2 ", "8 ", "1 ")#
#
bar <- append(bar, NA, after=25)#
cbind(foo,bar)
foo <- c("AVAIL", "ACTIVE_FEATURES", "CPUS", "TMP_DISK", "FREE_MEM", "AVAIL_FEATURES", "GROUPS", "OVERSUBSCRIBE", "TIMELIMIT", "MEMORY", "HOSTNAMES", "NODE_ADDR", "PRIO_TIER", "ROOT", "JOB_SIZE", "STATE", "USER", "VERSION", "WEIGHT", "S:C:T", "NODES(A/I) ", "MAX_CPUS_PER_NODE ", "CPUS(A/I/O/T) ", "NODES ", "REASON ", "NODES(A/I/O/T) ", "GRES ", "TIMESTAMP ", "PRIO_JOB_FACTOR ", "DEFAULTTIME ", "PREEMPT_MODE ", "NODELIST ", "CPU_LOAD ", "PARTITION ", "PARTITION ", "ALLOCNODES ", "STATE ", "USER ", "SOCKETS ", "CORES ", "THREADS")#
bar <- c("up", "CPU_IVY,E5-2650v2,2.60GHz,NOACCL,NOACCL", "16", "0", "N/A", "CPU_IVY,E5-2650v2,2.60GHz,NOACCL,NOACCL", "all", "NO", "infinite", "64000", "sh-5-7", "sh-5-7", "1", "no", "1-infinite", "drain*", "root", "N/A", "100081", "2:8:1", "0/0 ", "UNLIMITED ", "0/0/16/16 ", "1 ", "DIMM B2 ", " SR942432801 ", "0/0/1/1 ", "(null) ", "2017-01-18T12:38:51 ", "10 ", "2:00:00 ", "REQUEUE ", "sh-5-7 ", "N/A ", "normal* ", "normal ", "all ", "drained* ", "root(0) ", "2 ", "8 ", "1 ")
cbind(foo,bar)
bar <- append(bar, "NA", after=25)
bar
foo <- c("AVAIL", "ACTIVE_FEATURES", "CPUS", "TMP_DISK", "FREE_MEM", "AVAIL_FEATURES", "GROUPS", "OVERSUBSCRIBE", "TIMELIMIT", "MEMORY", "HOSTNAMES", "NODE_ADDR", "PRIO_TIER", "ROOT", "JOB_SIZE", "STATE", "USER", "VERSION", "WEIGHT", "S:C:T", "NODES(A/I) ", "MAX_CPUS_PER_NODE ", "CPUS(A/I/O/T) ", "NODES ", "REASON ", "NODES(A/I/O/T) ", "GRES ", "TIMESTAMP ", "PRIO_JOB_FACTOR ", "DEFAULTTIME ", "PREEMPT_MODE ", "NODELIST ", "CPU_LOAD ", "PARTITION ", "PARTITION ", "ALLOCNODES ", "STATE ", "USER ", "SOCKETS ", "CORES ", "THREADS")#
bar <- c("up", "CPU_IVY,E5-2650v2,2.60GHz,NOACCL,NOACCL", "16", "0", "N/A", "CPU_IVY,E5-2650v2,2.60GHz,NOACCL,NOACCL", "all", "NO", "infinite", "64000", "sh-5-7", "sh-5-7", "1", "no", "1-infinite", "drain*", "root", "N/A", "100081", "2:8:1", "0/0 ", "UNLIMITED ", "0/0/16/16 ", "1 ", "DIMM B2 ", " SR942432801 ", "0/0/1/1 ", "(null) ", "2017-01-18T12:38:51 ", "10 ", "2:00:00 ", "REQUEUE ", "sh-5-7 ", "N/A ", "normal* ", "normal ", "all ", "drained* ", "root(0) ", "2 ", "8 ", "1 ")#
#
foo <- append(foo, "NA", after=25)#
cbind(foo,bar)
ntxt
install.packages("gdata")
1536000/1024
?fwf
?fwf_empty
fwf_widths()
fwf_widths(20)
fwf_widths(c(20,20,20,20)))
fwf_widths(c(20,20,20,20))
fwf <- fwf_widths(rep(20, length(header)), col_names=header)
header <- c("avail", "cpus", "memory", "partition", "statecompact")#
fwf <- fwf_widths(rep(20, length(header)), col_names=header)
fwf
?cat
1.5+1/8
90*3
339/5
90*4
8*2
foo <- function(task.attempt) {}
foo <- function(task.attempt) {
m <- 8 * task.attempt
cpus <- 8/task.attempt
tm <- m*cpus
print(paste("m =",m))
print(paste("cpus =", cpus))
print("total m =", tm)
}
foo(1)
foo <- function(task.attempt) {#
  m <- 8 * task.attempt#
  cpus <- 8/task.attempt#
  tm <- m*cpus#
  paste("m =", m, "; cpus =", cpus, "; totm =", cpus*m)#
}
foo(1)
foo(2)
foo(3)
foo <- function(task.attempt) {#
  m <- 8 * task.attempt#
  cpus <- floor(8/task.attempt)#
  tm <- m*cpus#
  paste("m =", m, "; cpus =", cpus, "; totm =", cpus*m)#
}
foo(1)
foo(2)
foo(3)
foo(4)
foo(5)
foo(6)
8/(c(1:4)*2)
16/(c(1:4)*2)
200*35
116*156
156/52
1360*3
1300*2
2600+550
4139/24
9330/96
6205/48
110000000*150
110000000*150/1000/1000
5*20
4080/48
18*5
18*4
18*100
8000*30
8000/30
5000/30
$18*1000
18_1000
18*1000
6000/18
3000/18
5300/18
2500/18
0.15*5.3
0.15*5.3*1000
795/18
25*50
3248.69+5.01
35.53/409
13/230
74.83/863
rmarkdown:render
6000*100000
6000*20000
sel_grads <- tbl_df(sel_grads)
?standardie
?standardize
?standardise
?scale
?sample_n
library(dplyr)
?sample_n
?right_join
59*0.2
library(doMC)
?registerMC
?registerDoMC
2.8+2.5+2.8
0.7+0.7+0.8
64*200
64*300
16*4
24*4
1897.33-35
1e7
1e8
1e9
install.packages("vcfR")
update.packages()
8000/200
3739/2
library(bioconductr)
source("https://bioconductor.org/biocLite.R")#
biocLite()
biocLite("SNPRelate")
biocLite()
source("http://bioconductor.org/biocLite.R")#
biocLite("gdsfmt")#
biocLite("SNPRelate")
24*4
24*8
192*2
384+64
24*4
library(vcfR)
26!
factorial(26)
26*25
26*25*24
26*25*24*23
*22
26*25*24*23*22
26*25*24*23*22*21
26*25*24*23*22*21*20
factorial(25)
3*2*1
factorial(3)
9*8*7*6*5*4*3*2
factorial(9)
factorial(50)
import <- read_tsv(args[1], col_names=TRUE)#
sample_groups <- read_tsv(args[2], col_names=c("ID", "pop"))#
sample_groups$ID <- paste(sample_groups$ID, sample_groups$ID, sep = "_")#
#
import <- import %>% select(-`(C)M`, -SNP)
?any
?choose
?foreach
library(foreach)
?foreach
500*10
500*10+300*5+300*6+300*9+300*10+200+*2+200*3+200*3+200+200+400*3
500*10+300*5+300*6+300*9+300*10+200*2+200*3+200*3+200+200+400*3
6*18
512/40
50/1600
load("/Users/ryan/Dropbox/KRSP/MateChoice/data/chase.RData")
ls()
chase.dams
head(chase.dams)
hist(chase.dams$julian)
library(ggplot)
library(ggplot2)
ggplot(chase.dams, aes(x = julian)) + geom_histogram()
ggplot(chase.dams, aes(x = julian)) + geom_histogram() + facet_wrap(~Year)
ggplot(chase.dams, aes(x = julian)) + geom_histogram() + facet_wrap(~Year) + xlab("Day of year")
setwd('/Volumes/bio-dap15.stanford.edu/zstor/2016-tiger-wgs/pipelines/basic-stats/bin')
library(tidyr)#
library(dplyr)#
library(ggplot2)#
library(readr)#
pc_cols <- paste("PC", 1:20, sep = '')#
dat <- read_delim(file="../outputs/ldak/fb-170208-snp-q30-gq30-hwe-ss0.001.vect", delim=" ", col_names=c("ID", "ID2", pc_cols))#
dat <- dat %>% select(-ID2)#
#
sgs <- read_tsv("../sample_groups.tsv", col_names=c("ID", "Pop"))#
#
dat <- left_join(dat, sgs)#
#
ggplot(dat, aes(x = PC1, y = PC2, color = Pop)) + geom_point()
ggplot(dat, aes(x = PC1, y = PC2, color = Pop)) + geom_point(size = 3)
ggplot(dat, aes(x = PC2, y = PC3, color = Pop)) + geom_point(size = 3)
dat$Pop[dat$ID == "ZOO7"]
dat$Pop[dat$ID == "ZOO7"] <- "ZOO7"
ggplot(dat, aes(x = PC2, y = PC3, color = Pop)) + geom_point(size = 3)
ggplot(dat, aes(x = PC1, y = PC2, color = Pop)) + geom_point(size = 3)
ggplot(dat, aes(x = PC2, y = PC3, color = Pop)) + geom_point(size = 3)
ggplot(dat, aes(x = PC3, y = PC4, color = Pop)) + geom_point(size = 3)
library(tidyr)#
library(dplyr)#
library(ggplot2)#
library(readr)#
pc_cols <- paste("PC", 1:20, sep = '')#
dat <- read_delim(file="../outputs/ldak/fb-170208-snp-q30-gq30-hwe-ss0.001.vect", delim=" ", col_names=c("ID", "ID2", pc_cols))#
dat <- dat %>% select(-ID2)#
#
sgs <- read_tsv("../sample_groups.tsv", col_names=c("ID", "Pop"))#
#
dat <- left_join(dat, sgs)#
#
ggplot(dat, aes(x = PC1, y = PC2, color = Pop)) + geom_point(size = 3)
